{{- range $k, $v := $.Values.nodeGroups }}
---
apiVersion: karpenter.sh/{{ $.Values.ApiVersion }}
kind: NodePool
metadata:
  name: "{{ $k }}-{{ $v.instances.architecture | default $.Values.instances.architecture }}"
spec:
  template:
    metadata:
      labels:
        {{ $.Values.nodeGroupLabelName }}: {{ $v.nodeGroupLabel | default $k }}
        cluster: {{ $.Values.clusterName }}
        {{- if hasKey $v "labels" }}
        {{- range $labelName, $labelValue := $v.labels }}
        {{ $labelName }}: {{ $labelValue }}
        {{- end }}
        {{- end }}
      annotations:
        argocd.argoproj.io/sync-options: "SkipDryRunOnMissingResource=true"
      {{- if hasKey $v "annotations" }}
        {{- range $annotationName, $annotationValue := $v.annotations }}
        {{ $annotationName }}: {{ $annotationValue }}
        {{- end }}
      {{- end }}
    spec:
      nodeClassRef:
        {{- if or (hasKey $v "nodeClassRef") (hasKey $.Values "nodeClassRef") }}
          {{- ($v.nodeClassRef | default $.Values.nodeClassRef) | toYaml | nindent 8 }}
        {{- end }}
        name: {{ $k }}-{{ $v.instances.architecture | default $.Values.instances.architecture }}
      {{- if or (hasKey $v "taints") (eq ($v.autoTaint | default $.Values.autoTaint) "true") }}
      taints:
        {{- if eq ($v.autoTaint | default $.Values.autoTaint) "true" }}
        - key: dedicated
          effect: NoSchedule
          value: {{ ($v.nodeGroupLabel | default $k) | replace "-" "_"  }}
        {{- end }}
        {{- if hasKey $v "taints" }}
        {{- range $v.taints }}
        - key: {{ .key }}
          value: {{ .value }}
          effect: {{ .effect }}
        {{- end }}
        {{- end }}
      {{- end }}
      {{- if or (hasKey $v "startupTaints") ($v.cilium | default $.Values.cilium) }}
      startupTaints:
        {{- if hasKey $v "startupTaints" }}
          {{- range $v.startupTaints }}
        - key: {{ .key }}
          value: {{ .value }}
          effect: {{ .effect }}
          {{- end }}
        {{- end }}
        {{- if $v.cilium | default $.Values.cilium }}
        - key: node.cilium.io/agent-not-ready
          value: "true"
          effect: {{ $v.ciliumEffect | default $.Values.ciliumEffect }}
        {{- end }}
      {{- end }}
      expireAfter: {{ $v.expireAfter | default $.Values.expireAfter }}
      requirements:
      {{- if not (hasKey $v.instances "instanceTypes") }}
        - key: "karpenter.k8s.aws/instance-category"
          operator: In
          values:
          {{- range $v.instances.categories | default $.Values.instances.categories }}
          - {{ . }}
          {{- end }}
        - key: "karpenter.k8s.aws/instance-cpu"
          operator: In
          values:
          {{- range $v.instances.cores | default $.Values.instances.cores }}
          - {{ . | quote }}
          {{- end }}
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values:
          - {{ sub ($v.instances.minGeneration | default $.Values.instances.minGeneration) 1 | quote }}
      {{- end }}
        - key: "kubernetes.io/arch"
          operator: In
          values:
          {{- if eq ($v.instances.architecture | default $.Values.instances.architecture) "multiarch" }}
          - amd64
          - arm64
          {{- else }}
          - {{ $v.instances.architecture | default $.Values.instances.architecture }}
          {{- end }}
        - key: "karpenter.sh/capacity-type"
          operator: In
          values:
          {{- range $v.instances.capacityType | default $.Values.instances.capacityType }}
          - {{ . }}
          {{- end }}
        - key: kubernetes.io/os
          operator: In
          values:
          {{- range $v.instances.operatingSystems | default $.Values.instances.operatingSystems }}
          - {{ . }}
          {{- end }}
        {{- if or (hasKey $.Values "excludeFamilies") (hasKey $v "excludeFamilies") }}
        - key: "karpenter.k8s.aws/instance-family"
          operator: NotIn
          values:
          {{- if hasKey $v "excludeFamilies" }}
          {{- range $v.excludeFamilies }}
          - {{ . }}
          {{- end }}
          {{- else }}
          {{- range $.Values.excludeFamilies }}
          - {{ . }}
          {{- end }}
          {{- end }}
        {{- end }}
        {{- if or (hasKey $.Values "excludeInstanceSize") (hasKey $v "excludeInstanceSize") }}
        - key: "karpenter.k8s.aws/instance-size"
          operator: NotIn
          values:
          {{- if hasKey $v "excludeInstanceSize" }}
          {{- range $v .excludeInstanceSize }}
          - {{ . }}
          {{- end }}
          {{- else }}
          {{- range $.Values.excludeInstanceSize }}
          - {{ . }}
          {{- end }}
          {{- end }}
        {{- end }}
        {{- if hasKey $v "capacitySpread" }}
        - key: capacity-spread
          operator: In
          values:
          {{- range untilStep (int $v.capacitySpread.start) (int (add1 $v.capacitySpread.end)) 1 }}
            - "{{ . }}"
          {{- end }}
        {{- end }}
        {{- if hasKey $v.instances "instanceTypes" }}
        - key: node.kubernetes.io/instance-type
          operator: In
          values:
          {{- range $v.instances.instanceTypes }}
            - {{ . -}}
          {{- end }}
        {{- end }}
        {{- if or (hasKey $.Values "additionalRequirements") (hasKey $v "additionalRequirements") }}
        {{- toYaml ($v.additionalRequirements | default $.Values.additionalRequirements) | nindent 8 }}
        {{- end }}
  disruption:
    consolidationPolicy: {{$v.consolidationPolicy | default $.Values.consolidationPolicy}}
    consolidateAfter: {{ $v.consolidateAfter | default $.Values.consolidateAfter }}
    {{- if $v.budgets }}
    budgets:
    {{- toYaml $v.budgets | nindent 6 }}
    {{- end }}
  {{- if hasKey $v "limits" }}
  limits:
    {{- range $limitName, $limitValue := $v.limits }}
    {{ $limitName }}: {{ $limitValue }}
    {{- end }}
  {{- end }}
  weight: {{ $v.weight | default $.Values.weight }}
{{- end }}
