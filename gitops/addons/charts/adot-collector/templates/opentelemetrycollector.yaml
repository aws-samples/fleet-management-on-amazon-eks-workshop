apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: adot
spec:
  mode: deployment
  image: public.ecr.aws/aws-observability/aws-otel-collector:v0.40.0
  serviceAccount: {{ default "adot-collector-kubeprometheus" .Values.serviceAccount }}
  env:
    - name: "K8S_NODE_NAME"
      valueFrom:
        fieldRef:
          fieldPath: "spec.nodeName"
    - name: "K8S_POD_NAME"
      valueFrom:
        fieldRef:
          fieldPath: "metadata.name"
    - name: "K8S_NAMESPACE"
      valueFrom:
        fieldRef:
          fieldPath: "metadata.namespace"
  config: 
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: {{ .Values.otlpGrpcEndpoint }}
          http:
            endpoint: {{ .Values.otlpHttpEndpoint }}
      {{ if .Values.enableAdotcollectorMetrics }}
      prometheus/1:
        config:
          scrape_configs:
          - job_name: otel-collector-metrics
            scrape_interval: 10s
            static_configs:
              - targets: ['localhost:8888']
      {{ end }}
      prometheus:
        config:
          global:
            scrape_interval: {{ .Values.globalScrapeInterval }}
            scrape_timeout: {{ .Values.globalScrapeTimeout }}
          scrape_configs:
            - job_name: karpenter
              kubernetes_sd_configs:
                - role: endpoints
                  namespaces:
                    names:
                    - kube-system
              relabel_configs:
                - source_labels:
                  - __meta_kubernetes_endpoints_name
                  - __meta_kubernetes_endpoint_port_name
                  action: keep
                  regex: karpenter;http-metrics
            - job_name: coredns
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [__meta_kubernetes_pod_container_port_name]
                  regex: metrics
                  action: keep
                - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
                  regex: (.+)
                  target_label: __metrics_path__
                  action: replace
                - source_labels: [__address__]
                  target_label: __address__
                  action: keep
                - source_labels: [__meta_kubernetes_namespace]
                  regex: 'kube-system'
                  action: keep
                - source_labels: [__meta_kubernetes_pod_name]
                  regex: 'coredns-.*'
                  action: keep            
            
            - job_name: 'aws-cni-metrics'
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - action: keep
                  source_labels: [__meta_kubernetes_pod_label_k8s_app]
                  regex: aws-node
                - action: keep
                  source_labels: [__meta_kubernetes_pod_labelpresent_k8s_app]
                  regex: true
                - action: keep
                  source_labels: [__meta_kubernetes_pod_container_port_name]
                  regex: metrics
                - action: replace
                  source_labels: [__metrics_path__]
                  target_label: __metrics_path__
                  regex: (.+)
                  replacement: /metrics            

            - job_name: 'kubernetes-kubelet'
              scrape_interval: {{ .Values.globalScrapeInterval }}
              scrape_timeout: {{ .Values.globalScrapeTimeout }}
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: true
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
              - role: node
              relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - target_label: __address__
                replacement: kubernetes.default.svc.cluster.local:443
              - source_labels: [__meta_kubernetes_node_name]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/$${1}/proxy/metrics
            - job_name: 'kubelet'
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: true
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
              - role: node
              relabel_configs:
              - action: labelmap
                regex: __meta_kubernetes_node_label_(.+)
              - target_label: __address__
                replacement: kubernetes.default.svc.cluster.local:443
              - source_labels: [__meta_kubernetes_node_name]
                regex: (.+)
                target_label: __metrics_path__
                replacement: /api/v1/nodes/$${1}/proxy/metrics/cadvisor

            {{ if .Values.enableAPIserver }}
            - job_name: 'apiserver'
              scheme: https
              tls_config:
                ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                insecure_skip_verify: true
              bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
              kubernetes_sd_configs:
              - role: endpoints
              relabel_configs:
              - source_labels:
                  [
                    __meta_kubernetes_namespace,
                    __meta_kubernetes_service_name,
                    __meta_kubernetes_endpoint_port_name,
                  ]
                action: keep
                regex: default;kubernetes;https
              metric_relabel_configs:
              - action: keep
                source_labels: [__name__]
              - source_labels: [__name__, le]
                separator: ;
                regex: apiserver_request_duration_seconds_bucket;(0.15|0.2|0.3|0.35|0.4|0.45|0.6|0.7|0.8|0.9|1.25|1.5|1.75|2|3|3.5|4|4.5|6|7|8|9|15|25|40|50)
                replacement: $${1}
                action: drop
            {{ end }}
            - job_name: 'kube-proxy'
              honor_labels: true
              kubernetes_sd_configs:
              - role: pod
              relabel_configs:
              - action: keep
                source_labels:
                - __meta_kubernetes_namespace
                - __meta_kubernetes_pod_name
                separator: '/'
                regex: 'kube-system/kube-proxy.+'
              - source_labels:
                - __address__
                action: replace
                target_label: __address__
                regex: (.+?)(\\:\\d+)?
                replacement: $${1}:10249

            - job_name: 'kube-state-metrics'
              static_configs:
                - targets: ['kube-state-metrics.kube-prometheus-stack.svc.cluster.local:8080']
            - job_name: 'node-exporter'
              kubernetes_sd_configs:
                - role: endpoints
              ec2_sd_configs:
              relabel_configs:
                - source_labels: [ __address__ ]
                  action: keep
                  regex: '.*:9100$'
                - action: replace
                  source_labels: [__meta_kubernetes_endpoint_node_name]
                  target_label: nodename
            {{ if .Values.enableCustomMetrics }}
            {{- range $k, $v := fromYaml .Values.customMetrics }}
            - job_name: "{{ $k }}"
              kubernetes_sd_configs:
                - role: pod
              metrics_path: '{{ $v.path }}'
              {{ if $v.enableBasicAuth }}
              basic_auth:
                username: '{{ $v.basicAuthUsername }}'
                password: '{{ $v.basicAuthPassword }}'
              {{ end }}
              relabel_configs:
                - source_labels: [ __address__ ]
                  action: keep
                  regex: '{{ $v.ports }}'
                - action: replace
                  source_labels: [__meta_kubernetes_pod_node_name]
                  target_label: nodename
                - action: replace
                  source_labels: [__meta_kubernetes_namespace]
                  target_label: namespace
                - action: replace
                  source_labels: [__meta_kubernetes_pod_name]
                  target_label: pod_name
                - action: replace
                  source_labels: [__meta_kubernetes_pod_container_name]
                  target_label: container_name
                - action: replace
                  source_labels: [__meta_kubernetes_pod_controller_kind]
                  target_label: pod_controller_kind
              metric_relabel_configs:
                - source_labels: [ __name__ ]
                  regex: '{{ $v.droppedSeriesPrefixes }}'
                  action: drop
            {{- end }}
            {{ end }}
            {{ if .Values.enableJava }}
            - job_name: 'kubernetes-java-jmx'
              sample_limit: {{ .Values.javaScrapeSampleLimit }}
              metrics_path: {{ .Values.javaPrometheusMetricsEndpoint }}
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [ __address__ ]
                  action: keep
                  regex: '.*:9404$'
                - action: labelmap
                  regex: __meta_kubernetes_pod_label_(.+)
                - action: replace
                  source_labels: [ __meta_kubernetes_namespace ]
                  target_label: Namespace
                - source_labels: [ __meta_kubernetes_pod_name ]
                  action: replace
                  target_label: pod_name
                - action: replace
                  source_labels: [ __meta_kubernetes_pod_container_name ]
                  target_label: container_name
                - action: replace
                  source_labels: [ __meta_kubernetes_pod_controller_kind ]
                  target_label: pod_controller_kind
                - action: replace
                  source_labels: [ __meta_kubernetes_pod_phase ]
                  target_label: pod_controller_phase
              metric_relabel_configs:
                - source_labels: [ __name__ ]
                  regex: 'jvm_gc_collection_seconds.*'
                  action: drop
            {{ end }}

            {{ if .Values.enableNginx }}
            - job_name: 'kubernetes-nginx'
              sample_limit: {{ .Values.nginxScrapeSampleLimit }}
              metrics_path: {{ .Values.nginxPrometheusMetricsEndpoint }}
              kubernetes_sd_configs:
                - role: pod
              relabel_configs:
                - source_labels: [ __address__ ]
                  action: keep
                  regex: '.*:10254$'
                - source_labels: [__meta_kubernetes_pod_container_name]
                  target_label: container
                  action: replace
                - source_labels: [__meta_kubernetes_pod_node_name]
                  target_label: host
                  action: replace
                - source_labels: [__meta_kubernetes_namespace]
                  target_label: namespace
                  action: replace
              metric_relabel_configs:
                - source_labels: [__name__]
                  regex: 'go_memstats.*'
                  action: drop
                - source_labels: [__name__]
                  regex: 'go_gc.*'
                  action: drop
                - source_labels: [__name__]
                  regex: 'go_threads'
                  action: drop
                - regex: exported_host
                  action: labeldrop
            {{ end }}

         {{ if .Values.enableIstio }}
            - honor_labels: true
              job_name: kubernetes-istio
              kubernetes_sd_configs:
              - role: pod
              relabel_configs:
              - action: keep
                regex: true
                source_labels:
                - __meta_kubernetes_pod_annotation_prometheus_io_scrape
              - action: drop
                regex: true
                source_labels:
                - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
              - action: replace
                regex: (https?)
                source_labels:
                - __meta_kubernetes_pod_annotation_prometheus_io_scheme
                target_label: __scheme__
              - action: replace
                regex: (.+)
                source_labels:
                - __meta_kubernetes_pod_annotation_prometheus_io_path
                target_label: __metrics_path__
              - action: replace
                regex: (\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})
                replacement: '[$${2}]:$${1}'
                source_labels:
                - __meta_kubernetes_pod_annotation_prometheus_io_port
                - __meta_kubernetes_pod_ip
                target_label: __address__
              - action: replace
                regex: (\d+);((([0-9]+?)(\.|$)){4})
                replacement: $${2}:$${1}
                source_labels:
                - __meta_kubernetes_pod_annotation_prometheus_io_port
                - __meta_kubernetes_pod_ip
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
                replacement: __param_$1
              - action: labelmap
                regex: __meta_kubernetes_pod_label_(.+)
              - action: replace
                source_labels:
                - __meta_kubernetes_namespace
                target_label: namespace
              - action: replace
                source_labels:
                - __meta_kubernetes_pod_name
                target_label: pod
              - action: keep
                source_labels: [ __address__ ]
                regex: '.*:15020$$'
              - action: drop
                regex: Pending|Succeeded|Failed|Completed
                source_labels:
                - __meta_kubernetes_pod_phase
            {{ end }}


    exporters:
      {{ if .Values.enableTracing }}
      awsxray:
        region: {{ .Values.region }}
      {{ end }}
      prometheusremotewrite:
        endpoint: {{ .Values.ampurl }}
        auth:
          authenticator: sigv4auth
        resource_to_telemetry_conversion:
          enabled: true
      logging:
        verbosity: {{ .Values.adotLoglevel }}
    extensions:
      sigv4auth:
        region: {{ .Values.region }}
        service: aps
        {{ if ne .Values.assumeRoleArn "" }}
        assume_role:
          arn: {{ .Values.assumeRoleArn }}
          sts_region: {{ .Values.region }}
        {{ end }}
      health_check: null
      pprof:
        endpoint: :1888
      zpages:
        endpoint: :55679
    processors:
      batch/metrics:
        timeout: 30s
        send_batch_size: 500
      attributes/metrics:
        actions:
          - key: cluster
            action: upsert
            value: {{ .Values.ekscluster }}
          - key: region
            action: upsert
            value: {{ .Values.region }}
          - key: account_id
            action: upsert
            value: {{ .Values.accountId }}
    {{ if .Values.enableTracing }}
      batch/traces:
        timeout: {{ .Values.tracingTimeout }}
        send_batch_size: {{ .Values.tracingBatchSize }}
    {{ end }}
    service:
      extensions: [pprof, zpages, health_check, sigv4auth]
      pipelines:
        metrics:
          receivers: [prometheus, otlp]
          processors: [batch/metrics, attributes/metrics]
          exporters: [logging, prometheusremotewrite]
        {{ if .Values.enableAdotcollectorMetrics }}
        metrics/1:
          receivers: [prometheus/1]
          processors: []
          exporters: [prometheusremotewrite]
        {{ end }}
        {{ if .Values.enableTracing }}
        traces:
          receivers: [otlp]
          processors: [batch/traces]
          exporters: [logging, awsxray]
        {{ end }}
      {{ if .Values.enableAdotcollectorMetrics }}
      telemetry:
        metrics:
          address: 0.0.0.0:8888
          level: basic
        logs:
          level: {{ .Values.adotServiceTelemetryLoglevel }}
      {{ end }}
