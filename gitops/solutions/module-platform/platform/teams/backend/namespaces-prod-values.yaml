name: backend
labels:
  environment: prod
networkPolicies:
  enabled: true
  egress:
    deny:
      all:
        # -- create a NetworkPolicy that denies all outgoing traffic
        enabled: true
    allow:
      dns:
        # -- create a NetworkPolicy that allows outgoing traffic to the Kubernetes DNS
        enabled: true
        # -- The namespace where the Kubneretes DNS is running
        namespace: "kube-system"
  ingress:
    deny:
      all:
        # -- create a NetworkPolicy that denies all incoming traffic
        enabled: true
namespaces:
  carts:
    labels:
      additionalLabels:
        app.kubernetes.io/created-by: eks-workshop
      podSecurityAdmission:
        audit:
          standard: baseline
        enforce:
          standard: baseline
        warn:
          standard: baseline
    limitRanges:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      limits:
        - default: # this section defines default limits
            cpu: 500m
          defaultRequest: # this section defines default requests
            cpu: 500m
          max: # max and min define the limit range
            cpu: "2"
          min:
            cpu: 100m
          type: Container
    resourceQuotas:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      spec:
        hard:
          cpu: "5000"
          memory: 200Gi
          pods: "20"
        scopeSelector:
          matchExpressions:
          - operator : In
            scopeName: PriorityClass
            values: ["high"]
    networkPolicies:
    - name: allow-egress-same-namespace
      spec:
        podSelector: {}
        policyTypes:
        - Egress
        egress:
        - to:
          - podSelector: {}
    - name: allow-ingress-same-namespace-and-from-ui
      spec:
        podSelector: {}
        policyTypes:
        - Ingress
        ingress:
        - from:
          - podSelector: {}
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: ui
    roleBindings:
    - name: view
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: view
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: backend-team-view

  catalog:
    labels:
      additionalLabels:
        app.kubernetes.io/created-by: eks-workshop
      podSecurityAdmission:
        audit:
          standard: baseline
        enforce:
          standard: baseline
        warn:
          standard: baseline
    limitRanges:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      limits:
        - default: # this section defines default limits
            cpu: 500m
          defaultRequest: # this section defines default requests
            cpu: 500m
          max: # max and min define the limit range
            cpu: "2"
          min:
            cpu: 100m
          type: Container
    resourceQuotas:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      spec:
        hard:
          cpu: "5000"
          memory: 200Gi
          pods: "20"
        scopeSelector:
          matchExpressions:
          - operator : In
            scopeName: PriorityClass
            values: ["high"]
    networkPolicies:
    - name: allow-egress-same-namespace
      spec:
        podSelector: {}
        policyTypes:
        - Egress
        egress:
        - to:
          - podSelector: {}
    - name: allow-ingress-same-namespace-and-from-ui
      spec:
        podSelector: {}
        policyTypes:
        - Ingress
        ingress:
        - from:
          - podSelector: {}
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: ui
    roleBindings:
    - name: view
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: view
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: backend-team-view

  checkout:
    labels:
      additionalLabels:
        app.kubernetes.io/created-by: eks-workshop
      podSecurityAdmission:
        audit:
          standard: baseline
        enforce:
          standard: baseline
        warn:
          standard: baseline
    limitRanges:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      limits:
        - default: # this section defines default limits
            cpu: 500m
          defaultRequest: # this section defines default requests
            cpu: 500m
          max: # max and min define the limit range
            cpu: "2"
          min:
            cpu: 100m
          type: Container
    resourceQuotas:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      spec:
        hard:
          cpu: "5000"
          memory: 200Gi
          pods: "20"
        scopeSelector:
          matchExpressions:
          - operator : In
            scopeName: PriorityClass
            values: ["high"]
    networkPolicies:
    - name: allow-egress-same-namespace-and-orders
      spec:
        podSelector: {}
        policyTypes:
        - Egress
        egress:
        - to:
          - podSelector: {}
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: orders
    - name: allow-ingress-same-namespace-and-from-ui
      spec:
        podSelector: {}
        policyTypes:
        - Ingress
        ingress:
        - from:
          - podSelector: {}
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: ui
    roleBindings:
    - name: view
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: view
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: backend-team-view

  orders:
    labels:
      additionalLabels:
        app.kubernetes.io/created-by: eks-workshop
      podSecurityAdmission:
        audit:
          standard: baseline
        enforce:
          standard: baseline
        warn:
          standard: baseline
    limitRanges:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      limits:
        - default: # this section defines default limits
            cpu: 500m
          defaultRequest: # this section defines default requests
            cpu: 500m
          max: # max and min define the limit range
            cpu: "2"
          min:
            cpu: 100m
          type: Container
    resourceQuotas:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      spec:
        hard:
          cpu: "5000"
          memory: 200Gi
          pods: "20"
        scopeSelector:
          matchExpressions:
          - operator : In
            scopeName: PriorityClass
            values: ["high"]
    networkPolicies:
    - name: allow-egress-same-namespace-and-rabbitmq
      spec:
        podSelector: {}
        policyTypes:
        - Egress
        egress:
        - to:
          - podSelector: {}
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: rabbitmq
    - name: allow-ingress-same-namespace-and-from-ui-checkout
      spec:
        podSelector: {}
        policyTypes:
        - Ingress
        ingress:
        - from:
          - podSelector: {}
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: ui
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: checkout
    roleBindings:
    - name: view
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: view
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: backend-team-view
  rabbitmq:
    labels:
      additionalLabels:
        app.kubernetes.io/created-by: eks-workshop
      podSecurityAdmission:
        audit:
          standard: baseline
        enforce:
          standard: baseline
        warn:
          standard: baseline
    limitRanges:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      limits:
        - default: # this section defines default limits
            cpu: 500m
          defaultRequest: # this section defines default requests
            cpu: 500m
          max: # max and min define the limit range
            cpu: "2"
          min:
            cpu: 100m
          type: Container
    resourceQuotas:
    - name: default
      labels:
        app.kubernetes.io/created-by: eks-workshop
      spec:
        hard:
          cpu: "5000"
          memory: 200Gi
          pods: "20"
        scopeSelector:
          matchExpressions:
          - operator : In
            scopeName: PriorityClass
            values: ["high"]
    networkPolicies:
    - name: allow-orders
      spec:
        podSelector: {}
        policyTypes:
        - Ingress
        ingress:
        - from:
          - namespaceSelector:
              matchLabels:
                kubernetes.io/metadata.name: orders
    roleBindings:
    - name: view
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: view
      subjects:
      - apiGroup: rbac.authorization.k8s.io
        kind: Group
        name: backend-team-view
